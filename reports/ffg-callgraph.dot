digraph Dependencies {
    node [shape=box];
    rankdir=TB;
    size="8.27,11.69";
    "get_set_FFG_targets";
    "valid_FFG_vote";
    "valid_FFG_vote" -> "verify_vote_signature";
    "valid_FFG_vote" -> "is_validator";
    "valid_FFG_vote" -> "get_validator_set_for_slot";
    "valid_FFG_vote" -> "get_block_from_hash";
    "valid_FFG_vote" -> "is_ancestor_descendant_relationship";
    "valid_FFG_vote" -> "has_block_hash";
    "is_FFG_vote_in_support_of_checkpoint_justification";
    "is_FFG_vote_in_support_of_checkpoint_justification" -> "valid_FFG_vote";
    "is_FFG_vote_in_support_of_checkpoint_justification" -> "get_block_from_hash";
    "is_FFG_vote_in_support_of_checkpoint_justification" -> "is_ancestor_descendant_relationship";
    "is_FFG_vote_in_support_of_checkpoint_justification" -> "is_justified_checkpoint";
    "filter_out_FFG_votes_not_in_FFG_support_of_checkpoint_justification";
    "filter_out_FFG_votes_not_in_FFG_support_of_checkpoint_justification" -> "is_FFG_vote_in_support_of_checkpoint_justification";
    "get_validators_in_FFG_support_of_checkpoint_justification";
    "get_validators_in_FFG_support_of_checkpoint_justification" -> "filter_out_FFG_votes_not_in_FFG_support_of_checkpoint_justification";
    "get_validators_in_FFG_support_of_checkpoint_justification" -> "pset_map_to_pset";
    "is_justified_checkpoint";
    "is_justified_checkpoint" -> "genesis_checkpoint";
    "is_justified_checkpoint" -> "has_block_hash";
    "is_justified_checkpoint" -> "is_complete_chain";
    "is_justified_checkpoint" -> "get_block_from_hash";
    "is_justified_checkpoint" -> "get_validator_set_for_slot";
    "is_justified_checkpoint" -> "validator_set_weight";
    "is_justified_checkpoint" -> "get_validators_in_FFG_support_of_checkpoint_justification";
    "is_justified_checkpoint" -> "pmap_keys";
    "filter_out_non_justified_checkpoint";
    "filter_out_non_justified_checkpoint" -> "is_justified_checkpoint";
    "get_justified_checkpoints";
    "get_justified_checkpoints" -> "filter_out_non_justified_checkpoint";
    "get_justified_checkpoints" -> "get_set_FFG_targets";
    "get_justified_checkpoints" -> "genesis_checkpoint";
    "get_justified_checkpoints" -> "pset_add";
    "get_greatest_justified_checkpoint";
    "get_greatest_justified_checkpoint" -> "get_justified_checkpoints";
    "get_greatest_justified_checkpoint" -> "pset_max";
    "is_FFG_vote_linking_to_a_checkpoint_in_next_slot";
    "is_FFG_vote_linking_to_a_checkpoint_in_next_slot" -> "valid_FFG_vote";
    "filter_out_FFG_vote_not_linking_to_a_checkpoint_in_next_slot";
    "filter_out_FFG_vote_not_linking_to_a_checkpoint_in_next_slot" -> "is_FFG_vote_linking_to_a_checkpoint_in_next_slot";
    "get_validators_in_FFG_votes_linking_to_a_checkpoint_in_next_slot";
    "get_validators_in_FFG_votes_linking_to_a_checkpoint_in_next_slot" -> "filter_out_FFG_vote_not_linking_to_a_checkpoint_in_next_slot";
    "get_validators_in_FFG_votes_linking_to_a_checkpoint_in_next_slot" -> "pset_map_to_pset";
    "is_finalized_checkpoint";
    "is_finalized_checkpoint" -> "is_justified_checkpoint";
    "is_finalized_checkpoint" -> "get_block_from_hash";
    "is_finalized_checkpoint" -> "get_validator_set_for_slot";
    "is_finalized_checkpoint" -> "validator_set_weight";
    "is_finalized_checkpoint" -> "get_validators_in_FFG_votes_linking_to_a_checkpoint_in_next_slot";
    "is_finalized_checkpoint" -> "pmap_keys";
    "filter_out_non_finalized_checkpoint";
    "filter_out_non_finalized_checkpoint" -> "is_finalized_checkpoint";
    "get_finalized_checkpoints";
    "get_finalized_checkpoints" -> "filter_out_non_finalized_checkpoint";
    "get_finalized_checkpoints" -> "get_set_FFG_targets";
    "get_finalized_checkpoints" -> "genesis_checkpoint";
    "get_finalized_checkpoints" -> "pset_add";
    "get_greatest_finalized_checkpoint";
    "get_greatest_finalized_checkpoint" -> "get_finalized_checkpoints";
    "get_greatest_finalized_checkpoint" -> "pset_max";
    "are_equivocating_votes";
    "are_equivocating_votes" -> "verify_vote_signature";
    "does_first_vote_surround_second_vote";
    "does_first_vote_surround_second_vote" -> "verify_vote_signature";
    "is_slashable_offence";
    "is_slashable_offence" -> "are_equivocating_votes";
    "is_slashable_offence" -> "does_first_vote_surround_second_vote";
    "is_slashable_node";
    "is_slashable_node" -> "is_slashable_offence";
    "get_slashabe_nodes";
    "get_slashabe_nodes" -> "pset_filter";
    "get_slashabe_nodes" -> "pset_map_to_pset";
    "get_slashabe_nodes" -> "pset_is_empty";
    "get_slashabe_nodes" -> "is_slashable_offence";
}

